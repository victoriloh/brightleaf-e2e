name: e2e

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        run: npm ci

      - name: Checkout app repository
        uses: actions/checkout@v4
        with:
          repository: victoriloh/qa-evaluation-app
          path: app
          # If the app repo is private, create a repo secret APP_REPO_TOKEN with 'repo' scope and uncomment:
          # token: ${{ secrets.APP_REPO_TOKEN }}

      - name: Detect docker-compose file
        run: |
          set -euxo pipefail
          if [ -f app/docker-compose.yml ]; then echo "COMPOSE=app/docker-compose.yml" >> $GITHUB_ENV; fi
          if [ -f app/qa-evaluation-app/docker-compose.yml ]; then echo "COMPOSE=app/qa-evaluation-app/docker-compose.yml" >> $GITHUB_ENV; fi
          if [ -z "${COMPOSE:-}" ]; then echo "Compose file not found under app/. Contents:"; ls -R app; exit 1; fi

      - name: Launch app stack
        run: |
          docker compose -f "${COMPOSE}" up -d --build

      - name: Wait for API health
        run: |
          for i in {1..30}; do
            if curl -fsS http://localhost:3000/api/health >/dev/null; then
              echo "API is up"; break; fi
            echo "Waiting for API... ($i)"; sleep 3;
          done
          curl -fsS http://localhost:3000/api/health

      - name: Wait for Frontend
        run: |
          for i in {1..30}; do
            if curl -fsS http://localhost:8080/login.html >/dev/null; then
              echo "Frontend is up"; break; fi
            echo "Waiting for Frontend... ($i)"; sleep 3;
          done
          curl -fsS http://localhost:8080/login.html

      - name: Install Playwright dependencies and browsers
        uses: microsoft/playwright-github-action@v1
      - name: Install browsers via script (compat)
        run: npm run prep

      - name: Run E2E
        run: npm test

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

      - name: Upload Cucumber HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cucumber-html-report
          path: reports/html

      - name: Upload Cucumber JSON
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cucumber-json
          path: reports/cucumber-report.json

      - name: Capture docker compose status and logs
        if: failure()
        run: |
          docker compose -f "${COMPOSE}" ps -a || true
          docker compose -f "${COMPOSE}" logs --no-color > compose-logs.txt || true

      - name: Upload compose logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: compose-logs
          path: compose-logs.txt

  test-remote:
    name: e2e (remote env)
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      # Prefer repository Variables; fallback to Secrets if provided
      BASE_URL: ${{ vars.BASE_URL != '' && vars.BASE_URL || secrets.BASE_URL }}
      API_URL: ${{ vars.API_URL != '' && vars.API_URL || secrets.API_URL }}
      HEADLESS: 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Show target environment
        run: |
          echo "BASE_URL=$BASE_URL"
          echo "API_URL=$API_URL"

      - name: Validate env
        run: |
          if [ -z "$BASE_URL" ] || [ -z "$API_URL" ]; then
            echo "BASE_URL and/or API_URL are not set. Configure repository Variables or Secrets." >&2
            exit 1
          fi

      - name: Install deps
        run: npm ci

      - name: Install Playwright dependencies and browsers
        uses: microsoft/playwright-github-action@v1

      - name: Install browsers via script (compat)
        run: npm run prep

      - name: Check health endpoints
        run: |
          echo "Checking API health at $API_URL/health";
          curl -fsS "$API_URL/health"
          echo "Checking frontend at $BASE_URL/login.html";
          curl -fsS "$BASE_URL/login.html" | head -n 5

      - name: Run E2E
        run: npm test

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-remote
          path: playwright-report

      - name: Upload Cucumber HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cucumber-html-report-remote
          path: reports/html

      - name: Upload Cucumber JSON
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cucumber-json-remote
          path: reports/cucumber-report.json

      - name: Bring down app stack
        if: always()
        run: |
          docker compose -f app/qa-evaluation-app/docker-compose.yml down
